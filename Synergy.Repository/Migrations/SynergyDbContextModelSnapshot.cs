// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Synergy.Repository.Database;

namespace Synergy.Repository.Migrations
{
    [DbContext(typeof(SynergyDbContext))]
    partial class SynergyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Synergy.Repository.Models.AdminAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordKey")
                        .IsRequired()
                        .HasColumnName("PasswordKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnName("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("AdminUser");
                });

            modelBuilder.Entity("Synergy.Repository.Models.ClientRequestLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnName("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateLogged")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DateLogged")
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 9, 24, 21, 2, 35, 469, DateTimeKind.Utc).AddTicks(6963));

                    b.Property<string>("Payload")
                        .HasColumnName("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestMethod")
                        .IsRequired()
                        .HasColumnName("RequestMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestReferencId")
                        .HasColumnName("RequestrefernceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestUniqueRefernceId")
                        .IsRequired()
                        .HasColumnName("UniqueReferenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnName("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequestLog");
                });

            modelBuilder.Entity("Synergy.Repository.Models.ClientResponseLog", b =>
                {
                    b.Property<int>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateLogged")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DateLogged")
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 9, 24, 21, 2, 35, 478, DateTimeKind.Utc).AddTicks(7841));

                    b.Property<int>("HttpStatusCode")
                        .HasColumnName("StatusCode")
                        .HasColumnType("int");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnName("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestUniqueRefernceId")
                        .IsRequired()
                        .HasColumnName("UniqueReferenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SynergyStatusCode")
                        .HasColumnName("SynergyStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResponseId");

                    b.ToTable("ResponseLog");
                });

            modelBuilder.Entity("Synergy.Repository.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryImageName")
                        .HasColumnName("CountryImageName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnName("CountryName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CountryShortCode")
                        .IsRequired()
                        .HasColumnName("CountryShortCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("DailingCode")
                        .HasColumnName("DailingCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("CountryId");

                    b.HasIndex("DailingCode", "CountryName", "CountryShortCode")
                        .IsUnique()
                        .HasName("IX_phoneNumbers_UniqueIndex")
                        .HasFilter("[DailingCode] IS NOT NULL");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Synergy.Repository.Models.CustomerAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnName("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 9, 24, 21, 2, 35, 655, DateTimeKind.Utc).AddTicks(1985));

                    b.Property<string>("DailingCode")
                        .HasColumnName("DailingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("EmailAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowDoyouKnow")
                        .HasColumnName("HowDoyouKnow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordKey")
                        .IsRequired()
                        .HasColumnName("PasswordKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnName("PhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RefererCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnName("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isEmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isEmailVerified")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasName("IX_EmailAddress_UniqueIndex");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasName("IX_phoneNumbers_UniqueIndex");

                    b.ToTable("CustomerAccount");
                });

            modelBuilder.Entity("Synergy.Repository.Models.InvestmentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoryId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnName("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 9, 24, 21, 2, 35, 669, DateTimeKind.Utc).AddTicks(1010));

                    b.HasKey("Id");

                    b.ToTable("InvestmnetCategory");
                });

            modelBuilder.Entity("Synergy.Repository.Models.SynergyInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvailableSlot")
                        .HasColumnName("AvailableSlot")
                        .HasColumnType("int");

                    b.Property<int>("CatergoryId")
                        .HasColumnName("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 9, 24, 21, 2, 35, 674, DateTimeKind.Utc).AddTicks(6333));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnName("Duration")
                        .HasColumnType("int");

                    b.Property<decimal>("InterestRate")
                        .HasColumnName("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnName("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoldOutSlot")
                        .HasColumnName("SolOutSlot")
                        .HasColumnType("int");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnName("Thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatergoryId");

                    b.ToTable("SynergyInvestment");
                });

            modelBuilder.Entity("Synergy.Repository.Models.CustomerAccount", b =>
                {
                    b.HasOne("Synergy.Repository.Models.Country", "Country")
                        .WithMany("CustomerAccounts")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Synergy.Repository.Models.SynergyInvestment", b =>
                {
                    b.HasOne("Synergy.Repository.Models.InvestmentCategory", "InvestmentCategory")
                        .WithMany("SynergyInvestments")
                        .HasForeignKey("CatergoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
