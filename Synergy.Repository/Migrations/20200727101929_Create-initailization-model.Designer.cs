// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Synergy.Repository.Database;

namespace Synergy.Repository.Migrations
{
    [DbContext(typeof(SynergyDbContext))]
    [Migration("20200727101929_Create-initailization-model")]
    partial class Createinitailizationmodel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Synergy.Repository.Models.ClientRequestLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnName("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateLogged")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DateLogged")
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 27, 10, 19, 28, 892, DateTimeKind.Utc).AddTicks(5615));

                    b.Property<string>("Payload")
                        .HasColumnName("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestMethod")
                        .IsRequired()
                        .HasColumnName("RequestMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestReferencId")
                        .HasColumnName("RequestrefernceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestUniqueRefernceId")
                        .IsRequired()
                        .HasColumnName("UniqueReferenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnName("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequestLog");
                });

            modelBuilder.Entity("Synergy.Repository.Models.ClientResponseLog", b =>
                {
                    b.Property<int>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateLogged")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DateLogged")
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 27, 10, 19, 28, 898, DateTimeKind.Utc).AddTicks(117));

                    b.Property<int>("HttpStatusCode")
                        .HasColumnName("StatusCode")
                        .HasColumnType("int");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnName("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestUniqueRefernceId")
                        .IsRequired()
                        .HasColumnName("UniqueReferenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SynergyStatusCode")
                        .HasColumnName("SynergyStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResponseId");

                    b.ToTable("ResponseLog");
                });

            modelBuilder.Entity("Synergy.Repository.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryImageName")
                        .HasColumnName("CountryImageName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnName("CountryName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CountryShortCode")
                        .IsRequired()
                        .HasColumnName("CountryShortCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("DailingCode")
                        .HasColumnName("DailingCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("CountryId");

                    b.HasIndex("DailingCode", "CountryName", "CountryShortCode")
                        .IsUnique()
                        .HasName("IX_phoneNumbers_UniqueIndex")
                        .HasFilter("[DailingCode] IS NOT NULL");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Synergy.Repository.Models.CustomerAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnName("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 27, 10, 19, 29, 30, DateTimeKind.Utc).AddTicks(2759));

                    b.Property<string>("DailingCode")
                        .HasColumnName("DailingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("EmailAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordKey")
                        .IsRequired()
                        .HasColumnName("PasswordKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnName("PhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RefererCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isEmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isEmailVerified")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasName("IX_EmailAddress_UniqueIndex");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasName("IX_phoneNumbers_UniqueIndex");

                    b.ToTable("CustomerAccount");
                });

            modelBuilder.Entity("Synergy.Repository.Models.CustomerAccount", b =>
                {
                    b.HasOne("Synergy.Repository.Models.Country", "Country")
                        .WithMany("CustomerAccounts")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
